import DB from '../src/database.js';
import readline from 'readline';

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function question(query) {
  return new Promise(resolve => rl.question(query, resolve));
}

async function init() {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Sora Invite Bot\n');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Firebase
    const settings = await DB.getSystemSettings();
    console.log('‚úÖ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω');
    console.log('–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', settings);
    
    // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–¥—ã
    const answer = await question('\n–î–æ–±–∞–≤–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏–Ω–≤–∞–π—Ç-–∫–æ–¥—ã? (y/n): ');
    
    if (answer.toLowerCase() === 'y') {
      const codesInput = await question('–í–≤–µ–¥–∏ –∫–æ–¥—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: ');
      const codes = codesInput.split(/\s+/).filter(c => c.length >= 5);
      
      if (codes.length > 0) {
        await DB.addCodesToPool(codes, 'system');
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${codes.length} –∫–æ–¥–æ–≤ –≤ –ø—É–ª`);
      } else {
        console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∞–ª–∏–¥–Ω—ã—Ö –∫–æ–¥–æ–≤');
      }
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const finalSettings = await DB.getSystemSettings();
    const poolSize = await DB.getPoolSize();
    
    console.log('\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`- –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${finalSettings.total_users || 0}`);
    console.log(`- –ö–æ–¥–æ–≤ –≤ –ø—É–ª–µ: ${poolSize}`);
    console.log(`- –ü–µ—Ä–≤—ã—Ö 10: ${finalSettings.first_10_count || 0}`);
    
    console.log('\n‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞: npm start\n');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
  } finally {
    rl.close();
    process.exit(0);
  }
}

init();

